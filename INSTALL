You need the following C/C++ libraries to build flowWorkspace from source (using Rtools for windows users).
-- libxml2
-- boost
-- google protobuf (>= 2.6.0) (https://github.com/google/protobuf/releases)

Linux users
=============
These libraries are installed in non-standard locations, please pass their 'prefix' to the configure script. e.g.
R CMD INSTALL flowWorkspace/ --configure-args='--with-xml=/home/yourname/xml_dir --with-protobuf=/home/yourname/protobuf_dir --with-boost=/home/yourname/boost_dir'

Also make sure these libraries can be found by R at run-time by adding them to LD_LIBRARY_PATH environment variable. e.g.
 export LD_LIBRARY_PATH=/home/yourname/protobuf_dir:$LD_LIBRARY_PATH
 
Add this to your `~/.profile` file can avoid doing so next time.
 

Windows users
=============

To install libxml2:

1. Download the pre-built binary from http://rglab.github.io/binaries/

2. unzip it (e.g. to c:\libxml2)
and you should see the directory structure like below in both i386 and x64 folder
   |-include
   |---libxml2
   |-----libxml (all *.h are here)
   |-lib (we should have static libary libxml2.a here)
   
3. set up the environment variable LIB_XML2 in order for flowWorkspace to find its library files and header files.  
You can do this by:
 * right click "Computer" and select "Properties"
 * click "Advanced system settings" and select "Advanced" tab
 * click the "Environment Variables"  button and bring up the dialog box
 * click the "New" button and enter "LIB_XML2" in the "Variable name" field, and /path/to/your/libxml2 (e.g. c:/libxml2) in the "Variable value" field. 
  Remember to use "/" instead of "\" as the directory delimiter.


Here is the instruction for the building boost on windows from source:

1. download boost 1.52 from http://www.boost.org/users/history/version_1_52_0.html and unzip it (e.g. to c:\boost_1_52_0)

2. build bjam from source
cd c:\boost_1_52_0\tools\build\v2\engine
build.bat mingw

3. copy bjam to the root dir of boost (i.e. c:\boost_1_52_0)
cp bin.ntx86\bjam.exe ..\..\..\..
cd ..\..\..\..

4. build library from source using bjam (here we only need to build serialization as static library)
for 64bit library:
bjam.exe --prefix=E:\boost\x64 toolset=gcc address-model=64 variant=release link=static install --with-serialization

for 32bit library:
bjam.exe --prefix=E:\boost\i386 toolset=gcc address-model=32 variant=release link=static install --with-serialization

5. re-organize the header folders  
cd e:\boost\i386\include\
mv boost_1_52\boost .

cd e:\boost\x64\include\
mv boost_1_52\boost .
 
Alternatively, pre-built boost binary can be downloaded from http://rglab.github.io/binaries/ 

Similarly, once boost is built, you also need to set up the environment variable LIB_BOOST in order for flowWorkspace
to find the library files and header files.


Instruction for cross-compiling protobuf 2.6.0 for windows

1. install cross-compiling tool chain on linux
2. download the source
2. first install protobuf on local linux (so that 'protoc' command is available for cross compiling later on
3. the run configure script for win64:
configure --host=x86_64-w64-mingw32 --prefix=/your_path/protobuf/x64 --enable-shared=no --with-protoc=protoc LDFLAGS='-static-libgcc'
4. then run make and make install
5. for win32:
configure --host=i686-w64-mingw32 --prefix=/your_path/protobuf/i386 --enable-shared=no --with-protoc=protoc LDFLAGS='-static-libgcc' 

Alternatively, pre-built pb binary can be downloaded from http://rglab.github.io/binaries/
Once built, set up the environment variable LIB_PROTOBUF similarly.

You can download Rtools at http://www.murdoch-sutherland.com/Rtools/ which provides the resources for building R and R packages. You should add to the Path variable the paths to the various components of Rtools. Please read the "Windows Toolset" appendix at http://cran.r-project.org/doc/manuals/R-admin.html#The-Windows-toolset for more details.
